generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

enum UserRole {
  USER
  ADMIN
}

enum TipoReclamo {
  MAIL     @map("Mail")
  TELEFONO @map("Telefono")
}

enum TipoPersonaInteres {
  PRESIDENTE                     @map("Presidente")
  SOCIO_GERENTE                  @map("Socio Gerente")
  DIRECTOR                       @map("Director")
  APODERADO                      @map("Apoderado")
  REPRESENTANTE_LEGAL            @map("Representante Legal")
  SOCIO                          @map("Socio")
  ACCIONISTA                     @map("Accionista")
  BENEFICIARIO_FINAL             @map("Beneficiario Final")
  EMPLEADO_EX_AFA                @map("Empleado Ex AFA")
  EX_EMPLEADO_ACTUAL_AFA         @map("Ex Empleado Actual AFA")
  FAMILIAR_COMUN_AFA_ENTIDAD     @map("Familiar Comun AFA Entidad")
  PERSONAL_INTERES_ECONOMICO_AFA @map("Personal Interes Economico AFA")
  OTRO                           @map("Otro")
  SECRETARIO                     @map("Secretario")
  VICEPRESIDENTE                 @map("Vicepresidente")
  TESORERO                       @map("Tesorero")
  VOCAL                          @map("Vocal")
}

enum TipoDocumento {
  DNI                  @map("DNI")
  DU                   @map("DU")
  CI                   @map("CI")
  LIBRETA_ENROLAMIENTO @map("Libreta Enrolamiento")
  PASAPORTE            @map("Pasaporte")
}

enum TipoDocumentoAfip {
  CUIT
  CUIL
}

enum TipoRelacion {
  PROVEEDOR        @map("Proveedor")
  SPONSOR          @map("Sponsor")
  AGENTE_COMERCIAL @map("Agente Comercial")
  CLUB             @map("Club")
}

enum TipoActividad {
  COMERCIAL  @map("Comercial")
  INDUSTRIAL @map("Industrial")
  PRODUCCION @map("Produccion")
}

enum CondicionIva {
  RESPONSABLE_INSCRIPTO           @map("Responsable Inscripto")
  RESPONSABLE_MONOTRIBUTO         @map("Responsable Monotributo")
  EXENTO                          @map("Exento")
  IVA_EXENTO                      @map("IVA Exento")
  GANANCIAS_EXENTO                @map("Ganancias Exento")
  SUJETO_EMISOR_FACTURA_A_LEYENDA @map("Sujeto emisor Factura A con Leyenda")
}

enum TipoEntidad {
  HUMANA                     @map("Humana")
  JURIDICA                   @map("Juridica")
  ORGANISMO_PUBLICO          @map("Organismo Publico")
  FUNDACION_ASOCIACION_CIVIL @map("Fundacion o Asociacion Civil")
  FIDEICOMISO                @map("Fideicomiso")
  OTROS                      @map("Otra")
  CLUB                       @map("Club")
}

enum TipoCuentaBancaria {
  CAJA_AHORRO_PESOS        @map("Caja de Ahorro en pesos")
  CUENTA_CORRIENTE_PESOS   @map("Cuenta corriente en Pesos")
  CUENTA_UNICA             @map("Cuenta unica")
  CAJA_AHORRO_DOLARES      @map("Caja de Ahorro en dolares")
  CUENTA_CORRIENTE_DOLARES @map("Cuenta corriente en dolares")
  OTRA                     @map("Otra")
}

enum TipoSocietario {
  SOCIEDAD_ANONIMA                       @map("Sociedad Anonima")
  SOCIEDAD_ANONIMA_PARTICIPACION_ESTATAL @map("Sociedad Anonima con participacion estatal mayoritaria")
  SOCIEDAD_COLECTIVA                     @map("Sociedad Colectiva")
  SOCIEDAD_CAPITAL_INDUSTRIA             @map("Sociedad de Capital e Industria")
  SOCIEDAD_HECHO                         @map("Sociedad de hecho")
  SOCIEDAD_RESPONSABILIDAD_LIMITADA      @map("Sociedad de Responsabilidad Limitada")
  SOCIEDAD_COMANDITA_ACCIONES            @map("Sociedad en comandita por acciones")
  ASOCIACION_CIVIL                       @map("Asociacion Civil")
  OTRA                                   @map("Otra")
}

enum Sexo {
  MASCULINO @map("Masculino")
  FEMENINO  @map("Femenino")
}

enum EstadoCivil {
  SOLTERO_A    @map("Soltero/a")
  CASADO_A     @map("Casado/a")
  DIVORCIADO_A @map("Divorciado/a")
  VIUDO_A      @map("Viudo/a")
  CONCUBINO_A  @map("Concubino/a")
}

enum TipoPaisNoCooperante {
  GREEN @map("Green")
  BLACK @map("Black")
}

model User {
  id        String   @id @default(cuid())
  nombre    String
  apellido  String
  email     String   @unique
  password  String
  role      UserRole @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("Users")
}

model SubmittedForm {
  id           String   @id @default(cuid())
  formId       String
  submissionId String
  procesado    Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("SubmittedForms")
}

model Entidad {
  id                                         Int                 @id @default(autoincrement())
  codigoEntidad                              String              @unique
  fecha                                      DateTime?
  tipoRelacion                               TipoRelacion?
  tipoActividad                              TipoActividad?
  condicionIva                               CondicionIva?
  codigoActividadAfip                        String?
  tipoIndustria                              String?
  otraActividad                              String?
  ingresosEnPesos                            Decimal?            @db.Decimal(15, 2)
  fechaCierrePesos                           DateTime?
  tipoDePersona                              TipoEntidad?
  direccion                                  String?
  ciudad                                     String?
  estado                                     String?
  codigoPostal                               String?
  pais                                       String?
  telefono                                   String?
  email                                      String?
  contactoAfa                                String?
  bancoCuentaBancaria                        String?
  titularCuentaBancaria                      String?
  sucursalCuentaBancaria                     String?
  numeroCuentaBancaria                       String?
  tipoCuentaBancaria                         TipoCuentaBancaria?
  cbu                                        String?
  alias                                      String?
  cuentaEnExterior                           Boolean?
  paisCuentaExterior                         String?
  iban                                       String?
  swift                                      String?
  bancoCorresponsal                          String?
  tieneOficinasExterior                      Boolean?
  oficinasExterior                           String[]
  tieneOperacionesExterior                   Boolean?
  operacionesExterior                        String[]
  montoOperacionesExterior                   Decimal?            @db.Decimal(15, 2)
  fechaCierrePesosExterior                   DateTime?
  porcentajeExportacionVsTotal               Decimal?            @db.Decimal(15, 2)
  nombreCompleto                             String?
  nacionalidad                               String?
  tipoDocumento                              TipoDocumento?
  dni                                        String?
  tipoDocumentoAfip                          TipoDocumentoAfip?
  sexo                                       Sexo?
  estadoCivil                                EstadoCivil?
  fechaNacimiento                            DateTime?
  paisNacimiento                             String?
  profesion                                  String?
  oficio                                     String?
  expuestaPoliticamente                      Boolean?
  esPepEnCaracterDe                          String?
  cuit                                       String?
  conflictoInteresEmpleadosAfa               Boolean?
  descripcionConflictoInteresEmpleadosAfa    String?
  empleadoActualExAfa                        Boolean?
  exEmpleadoActualAfa                        Boolean?
  familiarComunAfaEntidad                    Boolean?
  personalConInteresEconomicoAfa             Boolean?
  razonSocial                                String?
  tipoSocietario                             TipoSocietario?
  fechaConstitucionSociedad                  DateTime?
  fechaInscripcionRpc                        DateTime?
  datosInscripcionRegistrales                String?
  cotizaEnBolsa                              Boolean?
  dondeCotiza                                String[]
  esSujetoObligado                           Boolean?
  razonSujetoObligado                        String?
  tieneProgramaPrevencion                    Boolean?
  tieneProgramaIntegridad                    Boolean?
  personasInteres                            PersonaInteres[]
  categoriaClub                              String?
  tieneVinculosEstado                        Boolean?
  vinculosOrganismos                         String[]
  conflictoInteresAfa                        Boolean?
  descripcionConflictoAfa                    String[]
  createdAt                                  DateTime            @default(now())
  updatedAt                                  DateTime            @updatedAt
  riesgoPeorSituacion                        String?
  riesgoCantidadBancos                       Int?
  riesgoMontoTotal                           Decimal?            @db.Decimal(15, 2)
  riesgoAntiguedadBCRA                       Int?
  riesgoPeorSituacion12Meses                 String?
  riesgoCantidadBancos12Meses                Int?
  riesgoPerfilCumplimientoDeudor             Int?
  riesgoEsMoroso                             Boolean?
  riesgoCantidadSinFondosNoPagados6Meses     Int?
  riesgoMontoSinFondosNoPagados6Meses        Decimal?            @db.Decimal(15, 2)
  riesgoJuiciosCantidad12Meses               Int?
  riesgoConcursosQuiebrasCantidad12Meses     Int?
  riesgoScore                                Int?
  riesgoFacturacionEstimada                  Int?
  riesgoProveedorEstado                      String?
  riesgoFacturasApocrifas                    Boolean?
  riesgoDeudasFiscales                       Boolean?
  riesgoPedidoQuebrasCantidad12Meses         Int?
  riesgoPeorSituacionCon10Porciento12Mesas   String?
  riesgoSectorActividadPrincipalDelEmpleador String?
  riesgoSujetoObligado                       String?
  riesgoPersonaExpuestaPoliticamente         String?
  riesgoCantidadHomonimosEnBaseLaFt          Int?
  riesgoEnlanceHomonimosEnBaseLaFt           String?
  riesgoPeorSituacion12MesesBcra             String?
  riesgoUltimaActualizacion                  DateTime?
  compliancePersona1                         String?
  compliancePersona2                         String?
  compliancePersona3                         String?
  complianceEmail1                           String?
  complianceEmail2                           String?
  complianceEmail3                           String?

  estadosContables   EstadoContable[]
  solicitudes        PedidoEntidad[]
  riesgosGeograficos RiesgoGeografico[]
  riesgosTerroristas RiesgoTerrorista[]

  @@map("Entidades")
}

model PersonaInteres {
  id                    Int                @id @default(autoincrement())
  tipoPersonaInteres    TipoPersonaInteres
  nombreApellido        String?
  tipoDocumento         TipoDocumento?
  documento             String?
  telefono              String?
  email                 String?
  porcentajeAccionario  Decimal?           @db.Decimal(12, 2)
  expuestaPoliticamente Boolean?
  esPepEnCaracterDe     String?
  cargoEnAfa            String?
  fechaCargoEnAfa       DateTime?
  tipoInteresAfa        String?
  entidad               Entidad            @relation(fields: [entidadId], references: [id], onDelete: Cascade)
  entidadId             Int
  createdAt             DateTime           @default(now())
  updatedAt             DateTime           @updatedAt

  @@map("PersonasInteres")
}

model RiesgoGeografico {
  id        Int      @id @default(autoincrement())
  entidadId Int
  riesgoso  Boolean
  createdAt DateTime @default(now())
  entidad   Entidad  @relation(fields: [entidadId], references: [id], onDelete: Cascade)

  @@map("RiesgosGeograficos")
}

model RiesgoTerrorista {
  id                     Int      @id @default(autoincrement())
  entidadId              Int
  porcentajeCoincidencia Decimal  @db.Decimal(12, 2)
  createdAt              DateTime @default(now())
  entidad                Entidad  @relation(fields: [entidadId], references: [id], onDelete: Cascade)

  @@map("RiesgosTerroristas")
}

model EstadoContable {
  id                                     Int                   @id @default(autoincrement())
  fechaDesde                             String
  fechaHasta                             String
  cajaBancos                             Decimal               @default(0) @db.Decimal(15, 2)
  inversiones                            Decimal               @default(0) @db.Decimal(15, 2)
  cuentasCobrar                          Decimal               @default(0) @db.Decimal(15, 2)
  bienesDeCambio                         Decimal               @default(0) @db.Decimal(15, 2)
  otrosActivos                           Decimal               @default(0) @db.Decimal(15, 2)
  inversionesNoCorrientes                Decimal               @default(0) @db.Decimal(15, 2)
  bienesDeUso                            Decimal               @default(0) @db.Decimal(15, 2)
  activosIntangibles                     Decimal               @default(0) @db.Decimal(15, 2)
  otrosActivosNoCorrientes               Decimal               @default(0) @db.Decimal(15, 2)
  deudas                                 Decimal               @default(0) @db.Decimal(15, 2)
  remuneracionesCargasSociales           Decimal               @default(0) @db.Decimal(15, 2)
  cargasFiscales                         Decimal               @default(0) @db.Decimal(15, 2)
  deudasBancariasFinancieras             Decimal               @default(0) @db.Decimal(15, 2)
  otrasDeudas                            Decimal               @default(0) @db.Decimal(15, 2)
  previsiones                            Decimal               @default(0) @db.Decimal(15, 2)
  deudasNoCorrientes                     Decimal               @default(0) @db.Decimal(15, 2)
  otrasDeudasNoCorrientes                Decimal               @default(0) @db.Decimal(15, 2)
  deudasBancariasFinancierasNoCorrientes Decimal               @default(0) @db.Decimal(15, 2)
  previsionesNoCorrientes                Decimal               @default(0) @db.Decimal(15, 2)
  capital                                Decimal               @default(0) @db.Decimal(15, 2)
  reservas                               Decimal               @default(0) @db.Decimal(15, 2)
  resultadosNoAsignados                  Decimal               @default(0) @db.Decimal(15, 2)
  resultadoDelEjercicio                  Decimal               @default(0) @db.Decimal(15, 2)
  recursosIngresos                       Decimal               @default(0) @db.Decimal(15, 2)
  costoDeVenta                           Decimal               @default(0) @db.Decimal(15, 2)
  gastosOperativos                       Decimal               @default(0) @db.Decimal(15, 2)
  resultadosFinancierosPorTenencia       Decimal               @default(0) @db.Decimal(15, 2)
  otrosIngresosEgresos                   Decimal               @default(0) @db.Decimal(15, 2)
  area                                   Decimal               @default(0) @db.Decimal(15, 2)
  resultadosExtraordinarios              Decimal               @default(0) @db.Decimal(15, 2)
  impuestoGanancias                      Decimal               @default(0) @db.Decimal(15, 2)
  entidad                                Entidad               @relation(fields: [entidadId], references: [id], onDelete: Cascade)
  entidadId                              Int
  createdAt                              DateTime              @default(now())
  updatedAt                              DateTime              @updatedAt
  IndicadorFinanciero                    IndicadorFinanciero[]

  @@map("EstadosContables")
}

model IndicadorFinanciero {
  id                        Int            @id @default(autoincrement())
  liquidezCorriente         Decimal        @default(0) @db.Decimal(12, 2)
  endeudamientoTotal        Decimal        @default(0) @db.Decimal(12, 2)
  solvencia                 Decimal        @default(0) @db.Decimal(12, 2)
  roe                       Decimal        @default(0) @db.Decimal(12, 2)
  roa                       Decimal        @default(0) @db.Decimal(12, 2)
  rentabilidadSobreIngresos Decimal        @default(0) @db.Decimal(12, 2)
  eecc                      EstadoContable @relation(fields: [eeccId], references: [id], onDelete: Cascade)
  eeccId                    Int            @unique
  createdAt                 DateTime       @default(now())
  updatedAt                 DateTime       @updatedAt

  @@map("IndicadoresFinancieros")
}

model PedidoEntidad {
  id             Int         @id @default(autoincrement())
  entidadId      Int
  fecha          DateTime
  fechaRespuesta DateTime?
  tipoReclamo    TipoReclamo
  entidad        Entidad     @relation(fields: [entidadId], references: [id], onDelete: Cascade)
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt

  @@map("PedidosEntidades")
}

model PersonaTerrorista {
  id           Int       @id @default(autoincrement())
  dataId       String
  nombre       String
  organizacion String
  desde        DateTime?
  comments     String?

  @@map("PersonasTerroristas")
}

model PaisNoCooperante {
  id        Int                  @id @default(autoincrement())
  pais      String
  tipoLista TipoPaisNoCooperante

  @@map("PaisesNoCooperantes")
}

model CuitApocrifo {
  id                     Int      @id @default(autoincrement())
  cuit                   String   @unique
  fechaCondicionApocrifo DateTime
  fechaPublicacion       DateTime
  descripcion            String?

  @@map("CuitApocrifos")
}

model SujetoObligadoSancionado {
  id                 Int     @id @default(autoincrement())
  cuit               String?
  tipoSujetoObligado String
  razonSocial        String
  actoSancionatorio  String
  anio               Int
  estadoProcesal     String
  observaciones      String?

  @@map("SujetosObligadosSancionados")
}

model Pais {
  id               Int      @id @default(autoincrement())
  pais             String
  valoracionRiesgo Decimal? @db.Decimal(12, 2)

  @@map("Paises")
}

model ActividadAfip {
  id               Int      @id @default(autoincrement())
  actividadAfip    String
  valoracionRiesgo Decimal? @db.Decimal(12, 2)

  @@map("ActividadesAfip")
}

model Industria {
  id               Int      @id @default(autoincrement())
  industria        String
  valoracionRiesgo Decimal? @db.Decimal(12, 2)

  @@map("Industrias")
}

model Profesion {
  id               Int      @id @default(autoincrement())
  profesion        String
  valoracionRiesgo Decimal? @db.Decimal(12, 2)

  @@map("Profesiones")
}

model Oficio {
  id               Int      @id @default(autoincrement())
  oficio           String
  valoracionRiesgo Decimal? @db.Decimal(12, 2)

  @@map("Oficios")
}

model TablaStatus {
  id        Int      @id @default(autoincrement())
  tabla     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("TablasStatus")
}
